name: Release

on: 
  push:
   tags:
     - 'v*'

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - windows/arm64
          - windows/amd64
        include:
          - os: windows-latest
            platform: windows/amd64
            build-name: Callie-windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install dependencies (ensure Go and Node.js are installed)
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # Use your preferred Go version

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Use your preferred Node.js version

      # Install Wails
      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          wails doctor  # Ensure Wails is set up correctly
      
      - name: Add Secret
        shell: bash
        run: echo ${{ secrets.MONGO_URI }} > secret.txt 
        
      # Build the Wails app
      - name: Build Wails app
        run: |
          wails build -platform ${{ matrix.platform }} -webview2 download
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          files: ./build/bin/Callie.exe 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - Nothing
            - Nothing
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build/bin/Callie.exe
          asset_name: Callie.exe
          asset_content_type: application/exe   
  
      # - name: Upload binary as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ matrix.build-name }}-binary
      #     path: ./build/bin/Callie.exe # Adjust to your actual build output path

  # release-windows:
  #   needs: build-windows
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Windows binary
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: Callie-windows-binary  # Windows build artifact

  #     - name: Create GitHub Release
  #       uses: softprops/action-gh-release@v2.0.8
  #       with:
  #         files: ./build/bin/Callie.exe 
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}